{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, CHANGE_PRODUCT_PRICE } from \"../constants/cartConstant\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    case CHANGE_PRODUCT_PRICE:\n      return { ...state,\n        cart: state.cart.filter(c => c.id === action.payload.id ? c.qty = action.payload.qty : c.qty)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/cbnits-205/Desktop/E-Comm-Application/ecommerce-mern-project-code/frontend/src/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","CHANGE_PRODUCT_PRICE","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter","shippingAddress","paymentMethod","cart","c","id","qty"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,wBAHF,EAIEC,0BAJF,EAKEC,oBALF,QAMO,2BANP;AAQA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,aAAL;AACE,YAAMU,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAID;;AACH,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;AAFN,OAAP;;AAIF,SAAKR,0BAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYY,QAAAA,eAAe,EAAEV,MAAM,CAACG;AAApC,OAAP;;AACF,SAAKT,wBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELa,QAAAA,aAAa,EAAEX,MAAM,CAACG;AAFjB,OAAP;;AAIA,SAAKP,oBAAL;AACA,aAAO,EACL,GAAGE,KADE;AAELc,QAAAA,IAAI,EAAEd,KAAK,CAACc,IAAN,CAAWH,MAAX,CAAkBI,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASd,MAAM,CAACG,OAAP,CAAeW,EAAxB,GAA6BD,CAAC,CAACE,GAAF,GAAQf,MAAM,CAACG,OAAP,CAAeY,GAApD,GAA0DF,CAAC,CAACE,GAAnF;AAFD,OAAP;;AAIF;AACE,aAAOjB,KAAP;AAnCJ;AAqCD,CAtCM","sourcesContent":["import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CHANGE_PRODUCT_PRICE,\r\n} from \"../constants/cartConstant\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return { ...state, shippingAddress: action.payload };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n      case CHANGE_PRODUCT_PRICE:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(c => c.id === action.payload.id ? c.qty = action.payload.qty : c.qty)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}